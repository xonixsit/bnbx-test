{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth/auth-services.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_h2_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 17);\n    i0.ɵɵtext(1, \"Admin Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_h2_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 17);\n    i0.ɵɵtext(1, \"Change Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_17_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 19)(2, \"label\", 20);\n    i0.ɵɵtext(3, \"Mobile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelement(5, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 19)(7, \"label\", 20);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 21);\n    i0.ɵɵelement(10, \"input\", 23);\n    i0.ɵɵelementStart(11, \"span\", 24);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_17_Template_span_click_11_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.togglePasswordVisibility());\n    });\n    i0.ɵɵelement(12, \"i\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 19)(14, \"button\", 26);\n    i0.ɵɵtext(15, \" Login \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 27)(17, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_17_Template_a_click_17_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.showForgotPassword());\n    });\n    i0.ɵɵtext(18, \" Change Password? \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.loginForm);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"type\", ctx_r2.isPasswordVisible ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.isPasswordVisible ? \"fa-eye\" : \"fa-eye-slash\");\n  }\n}\nfunction LoginComponent_form_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_18_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onForgotPasswordSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 29)(2, \"label\", 30);\n    i0.ɵɵtext(3, \"Old Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"span\", 31);\n    i0.ɵɵelement(6, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 33);\n    i0.ɵɵelementStart(8, \"span\", 34);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_18_Template_span_click_8_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.toggleOldPasswordVisibility());\n    });\n    i0.ɵɵelement(9, \"i\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 29)(11, \"label\", 35);\n    i0.ɵɵtext(12, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"span\", 31);\n    i0.ɵɵelement(15, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 36);\n    i0.ɵɵelementStart(17, \"span\", 34);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_18_Template_span_click_17_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.toggleNewPasswordVisibility());\n    });\n    i0.ɵɵelement(18, \"i\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 29)(20, \"label\", 37);\n    i0.ɵɵtext(21, \"Confirm New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 21)(23, \"span\", 31);\n    i0.ɵɵelement(24, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 38);\n    i0.ɵɵelementStart(26, \"span\", 34);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_18_Template_span_click_26_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.toggleConfirmPasswordVisibility());\n    });\n    i0.ɵɵelement(27, \"i\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\", 39)(29, \"button\", 40);\n    i0.ɵɵtext(30, \"Change Password\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 39)(32, \"p\")(33, \"a\", 41);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_18_Template_a_click_33_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.backToLogin());\n    });\n    i0.ɵɵtext(34, \"Back to Login\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.changePasswordForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"type\", ctx_r3.isOldPasswordVisible ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isOldPasswordVisible ? \"fa-eye\" : \"fa-eye-slash\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"type\", ctx_r3.isNewPasswordVisible ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isNewPasswordVisible ? \"fa-eye\" : \"fa-eye-slash\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"type\", ctx_r3.isConfirmPasswordVisible ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isConfirmPasswordVisible ? \"fa-eye\" : \"fa-eye-slash\");\n  }\n}\nlet LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authServices, router, toastr) {\n      this.fb = fb;\n      this.authServices = authServices;\n      this.router = router;\n      this.toastr = toastr;\n      this.isDarkMode = true;\n      this.isPasswordVisible = false;\n      this.isForgotPassword = false; // Flag to toggle between login and forgot password forms\n      this.isOldPasswordVisible = false;\n      this.isNewPasswordVisible = false;\n      this.isConfirmPasswordVisible = false;\n      // Initialize the login form with validation\n      this.loginForm = this.fb.group({\n        mobile: ['', [Validators.required, Validators.pattern(/^[0-9]{10}$/)]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n      this.changePasswordForm = this.fb.group({\n        oldPassword: ['', [Validators.required, Validators.minLength(6)]],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]],\n        cnfPassword: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    toggleDarkMode(data) {\n      this.isDarkMode = !this.isDarkMode;\n      const rootElement = document.documentElement;\n      if (data) {\n        rootElement.classList.add('dark-mode');\n        localStorage.setItem('theme', 'dark');\n      } else {\n        rootElement.classList.remove('dark-mode');\n        localStorage.setItem('theme', 'light');\n      }\n    }\n    ngOnInit() {\n      this.authServices.toggleLoader(false);\n      this.token = localStorage.getItem('authToken');\n      const theme = localStorage.getItem('theme');\n      if (theme === 'dark') {\n        document.documentElement.classList.add('dark-mode');\n        this.isDarkMode = true;\n      }\n    }\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const loginData = this.loginForm.value;\n        this.authServices.login(loginData).subscribe({\n          next: response => {\n            const token = response.data.token;\n            const referralCode = response.data.sendData.referralCode;\n            if (token) {\n              localStorage.setItem('authToken', token); // Save token to localStorage\n              localStorage.setItem('referralCode', referralCode); // Save referralCode to localStorage\n              this.toastr.success(response.message, '', {\n                toastClass: 'toast-custom toast-success',\n                positionClass: 'toast-bottom-center',\n                closeButton: false,\n                timeOut: 3000,\n                progressBar: true\n              });\n              this.router.navigate(['/dashboard']); // Navigate to the dashboard\n            } else {\n              this.toastr.error(response.message, '', {\n                toastClass: 'toast-custom toast-error',\n                positionClass: 'toast-bottom-center',\n                closeButton: false,\n                timeOut: 3000,\n                progressBar: true\n              });\n            }\n          },\n          error: err => {\n            const errorMessage = err.error?.message || 'Something went wrong';\n            this.toastr.error(errorMessage, '', {\n              toastClass: 'toast-custom toast-error',\n              positionClass: 'toast-bottom-center',\n              closeButton: false,\n              timeOut: 3000,\n              progressBar: true\n            });\n          }\n        });\n      } else {\n        console.log('Form is invalid');\n      }\n    }\n    // Show the forgot password form\n    showForgotPassword() {\n      this.isForgotPassword = true;\n    }\n    // Toggle Old Password visibility\n    toggleOldPasswordVisibility() {\n      this.isOldPasswordVisible = !this.isOldPasswordVisible;\n    }\n    // Toggle New Password visibility\n    toggleNewPasswordVisibility() {\n      this.isNewPasswordVisible = !this.isNewPasswordVisible;\n    }\n    // Toggle Confirm Password visibility\n    toggleConfirmPasswordVisibility() {\n      this.isConfirmPasswordVisible = !this.isConfirmPasswordVisible;\n    }\n    // Back to login form\n    backToLogin() {\n      this.isForgotPassword = false;\n    }\n    // Forgot Password form submission\n    onForgotPasswordSubmit() {\n      if (this.changePasswordForm.valid) {\n        const changePasswordData = this.changePasswordForm.value;\n        this.authServices.forgotPassword(changePasswordData, this.token).subscribe({\n          next: response => {\n            this.toastr.success(response.message, '', {\n              toastClass: 'toast-custom toast-success',\n              positionClass: 'toast-bottom-center',\n              closeButton: false,\n              timeOut: 3000,\n              progressBar: true\n            });\n            this.backToLogin(); // Go back to login form after password reset request\n          },\n\n          error: err => {\n            const errorMessage = err.error?.message || 'Something went wrong';\n            this.toastr.error(errorMessage, '', {\n              toastClass: 'toast-custom toast-error',\n              positionClass: 'toast-bottom-center',\n              closeButton: false,\n              timeOut: 3000,\n              progressBar: true\n            });\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServicesService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 19,\n        vars: 4,\n        consts: [[1, \"container-fluid\", \"min-vh-100\", \"d-flex\", \"flex-column\", \"overflow-hidden\", \"position-relative\", 2, \"background-color\", \"#2B3139\"], [1, \"header\", \"navbar-area\", \"px-0\", \"position-absolute\", \"top-0\", \"w-100\"], [1, \"container-fluid\", \"px-0\"], [1, \"row\"], [1, \"col-lg-12\", \"px-0\"], [1, \"nav-inner\"], [1, \"navbar\", \"navbar-expand-lg\"], [1, \"navbar-brand\", \"px-4\"], [\"width\", \"180\", \"height\", \"60\", \"src\", \"assets/logo/bnbx_logo.png\", \"alt\", \"Logo\"], [1, \"container\", \"flex-grow-1\", \"d-flex\", \"align-items-center\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-md-5\", \"col-lg-4\"], [1, \"card\", \"border-0\", \"bg-transparent\"], [1, \"login-box\", \"p-4\", 2, \"background\", \"rgba(255, 255, 255, 0.05)\", \"backdrop-filter\", \"blur(10px)\", \"border-radius\", \"16px\", \"border\", \"1px solid rgba(255, 255, 255, 0.1)\"], [\"class\", \"text-center mb-4 text-white\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"text-center\", \"mb-4\", \"text-white\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-4\"], [1, \"text-white-50\", \"mb-2\"], [1, \"input-group\"], [\"type\", \"text\", \"id\", \"mobile\", \"formControlName\", \"mobile\", \"placeholder\", \"Enter your mobile number\", 1, \"form-control\", \"bg-transparent\", \"text-white\", \"border-0\", 2, \"border-bottom\", \"1px solid rgba(240, 185, 11, 0.5) !important\"], [\"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 1, \"form-control\", \"bg-transparent\", \"text-white\", \"border-0\", 2, \"border-bottom\", \"1px solid rgba(240, 185, 11, 0.5) !important\", 3, \"type\"], [1, \"input-group-text\", \"bg-transparent\", \"border-0\", \"text-white-50\", 2, \"border-bottom\", \"1px solid rgba(240, 185, 11, 0.5) !important\", 3, \"click\"], [1, \"fa\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"w-100\", \"text-dark\", 2, \"background-color\", \"#F0B90B\", \"font-weight\", \"600\"], [1, \"text-center\"], [\"href\", \"javascript:void(0)\", 1, \"text-decoration-none\", 2, \"color\", \"#F0B90B\", 3, \"click\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"oldPassword\"], [1, \"input-group-text\"], [1, \"fa-solid\", \"fa-lock\"], [\"id\", \"oldPassword\", \"formControlName\", \"oldPassword\", \"placeholder\", \"Enter your old password\", 1, \"form-control\", 3, \"type\"], [1, \"input-group-text\", 3, \"click\"], [\"for\", \"newPassword\"], [\"id\", \"newPassword\", \"formControlName\", \"newPassword\", \"placeholder\", \"Enter your new password\", 1, \"form-control\", 3, \"type\"], [\"for\", \"cnfPassword\"], [\"id\", \"cnfPassword\", \"formControlName\", \"cnfPassword\", \"placeholder\", \"Confirm your new password\", 1, \"form-control\", 3, \"type\"], [1, \"form-group\", \"mb-3\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"nav\", 6)(7, \"a\", 7);\n            i0.ɵɵelement(8, \"img\", 8);\n            i0.ɵɵelementEnd()()()()()()();\n            i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\", 10)(11, \"div\", 11)(12, \"div\", 12)(13, \"div\", 13)(14, \"div\", 14);\n            i0.ɵɵtemplate(15, LoginComponent_h2_15_Template, 2, 0, \"h2\", 15);\n            i0.ɵɵtemplate(16, LoginComponent_h2_16_Template, 2, 0, \"h2\", 15);\n            i0.ɵɵtemplate(17, LoginComponent_form_17_Template, 19, 3, \"form\", 16);\n            i0.ɵɵtemplate(18, LoginComponent_form_18_Template, 35, 7, \"form\", 16);\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isForgotPassword);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isForgotPassword);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isForgotPassword);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isForgotPassword);\n          }\n        },\n        dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".header[_ngcontent-%COMP%]{z-index:1000}.login-box[_ngcontent-%COMP%]{margin-top:-60px}body[_ngcontent-%COMP%]{overflow-x:hidden}.container-fluid[_ngcontent-%COMP%]{padding-right:0;padding-left:0;margin-right:auto;margin-left:auto}.form-control[_ngcontent-%COMP%]:focus{background-color:transparent!important;box-shadow:none!important;border-color:#f0b90b!important;color:#fff!important}.form-control[_ngcontent-%COMP%]::placeholder{color:#ffffff80!important}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}