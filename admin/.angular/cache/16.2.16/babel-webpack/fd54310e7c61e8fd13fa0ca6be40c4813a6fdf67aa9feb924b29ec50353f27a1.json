{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth/auth-services.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/services/transaction/transaction-services.service\";\nimport * as i4 from \"@angular/common\";\nfunction DashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22);\n    i0.ɵɵelement(3, \"i\");\n    i0.ɵɵelementStart(4, \"h3\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 24);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"fas \", card_r3.icon, \" card-icon\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", card_r3.value, \" USDT\");\n  }\n}\nfunction DashboardComponent_tr_39_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Transaction Rejected\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_tr_39_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please Wait for approval\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_tr_39_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const transaction_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(transaction_r4.description);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-success\": a0,\n    \"bg-danger\": a1,\n    \"bg-info\": a2,\n    \"bg-warning\": a3\n  };\n};\nconst _c1 = function (a0, a1, a2) {\n  return {\n    \"bg-success\": a0,\n    \"bg-danger\": a1,\n    \"bg-warning\": a2\n  };\n};\nfunction DashboardComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"span\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 26);\n    i0.ɵɵelementContainerStart(11, 27);\n    i0.ɵɵtemplate(12, DashboardComponent_tr_39_span_12_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(13, DashboardComponent_tr_39_span_13_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(14, DashboardComponent_tr_39_span_14_Template, 2, 1, \"span\", 29);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 26)(16, \"span\", 30);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(18, _c0, transaction_r4.transactionType === \"DEPOSIT\", transaction_r4.transactionType === \"WITHDRAW\", transaction_r4.transactionType === \"BOND-IN\", transaction_r4.transactionType === \"CONVERT-REWARD\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(transaction_r4.transactionType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"amount-positive\", transaction_r4.amount > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", transaction_r4.amount > 0 ? transaction_r4.amount : \"-\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"amount-negative\", transaction_r4.amount < 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", transaction_r4.amount < 0 ? transaction_r4.amount : \"-\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitch\", transaction_r4.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"REJECTED\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"PENDING\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(23, _c1, transaction_r4.status === \"COMPLETED\", transaction_r4.status === \"FAILED\" || transaction_r4.status === \"REJECTED\", transaction_r4.status === \"PENDING\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(transaction_r4.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(20, 15, transaction_r4.createdAt, \"MMM dd, yyyy, h:mm:ss a\"));\n  }\n}\nfunction DashboardComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"No transactions available.\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = function (a1) {\n  return {\n    title: \"BALANCE\",\n    value: a1,\n    icon: \"fa-wallet\"\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    title: \"Total Staked\",\n    value: a1,\n    icon: \"fa-arrow-circle-down\"\n  };\n};\nconst _c4 = function (a1) {\n  return {\n    title: \"Total Withdrawal\",\n    value: a1,\n    icon: \"fa-arrow-circle-up\"\n  };\n};\nconst _c5 = function (a1) {\n  return {\n    title: \"Pending Deposit\",\n    value: a1,\n    icon: \"fa-clock\"\n  };\n};\nconst _c6 = function (a1) {\n  return {\n    title: \"Pending Withdrawal\",\n    value: a1,\n    icon: \"fa-hourglass-half\"\n  };\n};\nconst _c7 = function (a1) {\n  return {\n    title: \"Total Referral balance\",\n    value: a1,\n    icon: \"fa-users\"\n  };\n};\nconst _c8 = function (a1) {\n  return {\n    title: \"Total Bonus Balance\",\n    value: a1,\n    icon: \"fa-gift\"\n  };\n};\nconst _c9 = function (a1) {\n  return {\n    title: \"Rank Bonus Balance\",\n    value: a1,\n    icon: \"fa-crown\"\n  };\n};\nconst _c10 = function (a0, a1, a2, a3, a4, a5, a6, a7) {\n  return [a0, a1, a2, a3, a4, a5, a6, a7];\n};\nlet DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(authService, toastr, transactionService) {\n      this.authService = authService;\n      this.toastr = toastr;\n      this.transactionService = transactionService;\n      this.userBlance = 0;\n      this.totalStakedBalance = 0;\n      this.totalWithdrawalBalance = 0;\n      this.totalTeamTurnoverBalance = 0;\n      this.totalDirectTeamTurnoverBalance = 0;\n      this.totalInternalTransferBalance = 0;\n      this.totalUnlockRewardBalnce = 0;\n      this.totalReferralRewardBalance = 0;\n      this.totalRankBonusBalance = 0;\n      this.totalRewardBalance = 0;\n      this.pendingReward = 0;\n      this.refferalcode = '';\n      this.bondBalance = '';\n      this.totalCredited = 0;\n      this.totalDebited = 0;\n      this.totalTransactions = 0; // total transactions for paginator\n      this.pageSize = 10;\n      this.currentPage = 1;\n      this.filteredTransactions = []; // Store filtered transactions\n      // Filter properties\n      this.transactionType = '';\n      this.status = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.transactions = [];\n      this.pendingDepositBalance = 0; // Need to add for Pending Deposit\n      this.pendingWithdrawalBalance = 0; // Need to add for Pending Withdrawal\n      this.totalBonusBalance = 0; // Need to add for Total Bonus Balance\n      this.totalDeposits = 0; // Need to add for Total Deposits\n    }\n\n    ngOnInit() {\n      // Retrieve the token and profile info\n      this.token = localStorage.getItem('authToken');\n      console.log(this.token);\n      this.getProfileInfo();\n      this.fetchTransactions(this.currentPage, this.pageSize);\n    }\n    getProfileInfo() {\n      this.authService.getProfile(this.token).subscribe({\n        next: response => {\n          console.log(response.data);\n          this.userBlance = response.data.totalBUSDBalance;\n          this.totalStakedBalance = response.data.totalStakedBalance;\n          this.totalWithdrawalBalance = response.data.totalWithdrawalBalance;\n          this.pendingDepositBalance = response.data.totalPendingDeposits || 0; // Add this line\n          this.pendingWithdrawalBalance = response.data.totalPendingWithdraws || 0; // Add this line\n          this.totalReferralRewardBalance = response.data.totalReferralRewardBalance;\n          this.totalBonusBalance = response.data.totalBonusBalance || 0; // Add this line\n          this.totalRankBonusBalance = response.data.totalRankBonusBalance;\n          this.totalDirectTeamTurnoverBalance = response.data.totalDirectTeamTurnoverBalance;\n          this.totalInternalTransferBalance = response.data.totalTRADEBalance;\n          this.totalTeamTurnoverBalance = response.data.totalTeamTurnoverBalance;\n          this.totalUnlockRewardBalnce = response.data.totalUnlockRewardBalnce;\n          this.bondBalance = response.data.totalStakingRewardBalance;\n          this.totalDeposits = response.data.totalDeposits || 0; // Add this line\n          this.refferalcode = localStorage.getItem('referralCode');\n          this.pendingReward = response.data.pendingReward;\n          // localStorage.setItem('balance', this.pendingReward)\n          // localStorage.setItem('isTrxPassCreated', response.data[0].isTrxPassCreated)\n          // localStorage.setItem('isWalletAdded', response.data[0].isWalletAdded)\n        },\n\n        error: error => {\n          this.toastr.error('Failed to load profile information', 'Error');\n        }\n      });\n    }\n    fetchTransactions(page, size) {\n      // Construct parameters object\n      const params = {\n        page: page.toString(),\n        sizePerPage: '10'\n        // limit: '10', // Limit to the latest 10 transactions\n      };\n      // Add filtering parameters only if they have values\n      if (this.transactionType) {\n        params.transactionType = this.transactionType;\n      }\n      if (this.status) {\n        params.status = this.status;\n      }\n      if (this.startDate) {\n        params.startDate = this.startDate;\n      }\n      if (this.endDate) {\n        params.endDate = this.endDate;\n      }\n      this.authService.toggleLoader(true);\n      this.transactionService.getTransactions(page, size, this.token, params).subscribe({\n        next: response => {\n          this.transactions = response.data.docs;\n          this.filteredTransactions = [...this.transactions]; // Initialize filtered transactions\n          this.totalTransactions = response.data.totalDocs; // total count for pagination\n          this.calculateTotals(); // Calculate totals when transactions are fetched\n          this.authService.toggleLoader(false);\n        },\n        error: err => {\n          this.transactions = [];\n          this.error = 'Failed to load transactions';\n          this.authService.toggleLoader(false);\n        }\n      });\n    }\n    copyReferralLink() {\n      const referralLink = `${window.location.origin}/signup?referralCode=${this.refferalcode}`;\n      navigator.clipboard.writeText(referralLink).then(() => {\n        this.toastr.success('Referral link copied to clipboard!');\n      }).catch(err => {\n        console.error('Failed to copy referral link: ', err);\n        this.toastr.error('Failed to copy referral link.');\n      });\n    }\n    applyFilters() {\n      this.currentPage = 1;\n      this.fetchTransactions(this.currentPage, this.pageSize);\n    }\n    calculateTotals() {\n      this.totalCredited = this.transactions.filter(transaction => transaction.amount > 0).reduce((sum, transaction) => sum + transaction.amount, 0);\n      this.totalDebited = this.transactions.filter(transaction => transaction.amount < 0).reduce((sum, transaction) => sum + Math.abs(transaction.amount), 0);\n    }\n    onPageChange(event) {\n      this.currentPage = event.pageIndex + 1;\n      this.pageSize = event.pageSize;\n      this.fetchTransactions(this.currentPage, this.pageSize);\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthServicesService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.TransactionServicesService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 41,\n        vars: 29,\n        consts: [[1, \"dashboard-container\"], [1, \"main-content\"], [1, \"wrapper1\"], [1, \"container\"], [1, \"dashboard-header\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"dashboard-title\", \"mb-0\"], [1, \"referral-code-wrapper\"], [1, \"referral-label\"], [1, \"mx-1\", \"text-warning\"], [\"title\", \"Copy to clipboard\", 1, \"fas\", \"fa-copy\", \"text-warning\", \"cursor-pointer\", 3, \"click\"], [1, \"row\", \"justify-content-center\", \"g-4\"], [\"class\", \"col-md-4 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"transaction-section\"], [1, \"section-title\"], [1, \"table-responsive\"], [1, \"custom-table\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-white\", 4, \"ngIf\"], [1, \"col-md-4\", \"mb-3\"], [1, \"dashboard-card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-value\"], [1, \"badge\", 3, \"ngClass\"], [1, \"px-3\", \"py-3\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"badge\", \"text-nowrap\", 3, \"ngClass\"], [1, \"text-white\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6);\n            i0.ɵɵtext(7, \"Dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 7)(9, \"span\", 8);\n            i0.ɵɵtext(10, \"Referral code:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"strong\", 9);\n            i0.ɵɵtext(12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"i\", 10);\n            i0.ɵɵlistener(\"click\", function DashboardComponent_Template_i_click_13_listener() {\n              return ctx.copyReferralLink();\n            });\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(14, \"div\", 11);\n            i0.ɵɵtemplate(15, DashboardComponent_div_15_Template, 8, 5, \"div\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 13)(17, \"div\", 14)(18, \"h2\", 15);\n            i0.ɵɵtext(19, \"Latest Transactions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 16)(21, \"table\", 17)(22, \"thead\")(23, \"tr\")(24, \"th\");\n            i0.ɵɵtext(25, \"S.No\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"th\");\n            i0.ɵɵtext(27, \"Transaction Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"th\");\n            i0.ɵɵtext(29, \"Credited Amount\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"th\");\n            i0.ɵɵtext(31, \"Debited Amount\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"th\");\n            i0.ɵɵtext(33, \"Description\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"th\");\n            i0.ɵɵtext(35, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"th\");\n            i0.ɵɵtext(37, \"Date\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(38, \"tbody\");\n            i0.ɵɵtemplate(39, DashboardComponent_tr_39_Template, 21, 27, \"tr\", 18);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(40, DashboardComponent_div_40_Template, 2, 0, \"div\", 19);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(12);\n            i0.ɵɵtextInterpolate(ctx.refferalcode);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction8(20, _c10, i0.ɵɵpureFunction1(4, _c2, ctx.userBlance), i0.ɵɵpureFunction1(6, _c3, ctx.totalStakedBalance), i0.ɵɵpureFunction1(8, _c4, ctx.totalWithdrawalBalance), i0.ɵɵpureFunction1(10, _c5, ctx.pendingDepositBalance), i0.ɵɵpureFunction1(12, _c6, ctx.pendingWithdrawalBalance), i0.ɵɵpureFunction1(14, _c7, ctx.totalReferralRewardBalance), i0.ɵɵpureFunction1(16, _c8, ctx.totalBonusBalance), i0.ɵɵpureFunction1(18, _c9, ctx.totalRankBonusBalance)));\n            i0.ɵɵadvance(24);\n            i0.ɵɵproperty(\"ngForOf\", ctx.transactions);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.transactions.length === 0);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, i4.NgSwitchDefault, i4.DatePipe],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{background-color:#2b3139;min-height:100vh}.main-content[_ngcontent-%COMP%]{flex:1;margin-top:6.2rem}.main-content[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]{max-width:1400px;margin:0 auto}.content1[_ngcontent-%COMP%]{padding-top:0}.referral-code[_ngcontent-%COMP%]{color:#fff;font-size:1.1rem}.referral-code[_ngcontent-%COMP%]   .cursor-pointer[_ngcontent-%COMP%]{cursor:pointer}.referral-code[_ngcontent-%COMP%]   .cursor-pointer[_ngcontent-%COMP%]:hover{opacity:.8}.dashboard-card[_ngcontent-%COMP%]{padding:1.5rem;background:linear-gradient(145deg,#2B3139,#1E2329);border-radius:12px;border:1px solid rgba(240,185,11,.1);box-shadow:0 4px 20px #0003;transition:all .3s ease}.dashboard-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);border-color:#f0b90b4d;box-shadow:0 8px 25px #f0b90b1a}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1rem;margin-bottom:1.5rem}.card-icon[_ngcontent-%COMP%]{color:#f0b90b;font-size:1.75rem;background:rgba(240,185,11,.1);padding:.75rem;border-radius:8px;transition:all .3s ease}.card-title[_ngcontent-%COMP%]{margin:0;color:#848e9c;font-size:1rem;font-weight:500;text-transform:uppercase;letter-spacing:.5px}.card-value[_ngcontent-%COMP%]{color:#f0b90b;font-size:1.5rem;font-weight:600;margin:0;padding-left:3.5rem}.custom-table[_ngcontent-%COMP%]{background-color:#1e2329;color:#fff;border-radius:8px;overflow:hidden;width:100%}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#1e2329}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{color:#848e9c;font-weight:500;padding:16px 24px;border-bottom:1px solid rgba(240,185,11,.1);font-size:14px;white-space:nowrap;text-transform:none}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid rgb(43,49,57);background-color:#1e2329}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#2b3139}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 24px;color:#fff;font-size:14px;white-space:nowrap}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td.amount-positive[_ngcontent-%COMP%]{color:#02c076}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td.amount-negative[_ngcontent-%COMP%]{color:#f6465d}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:.5rem}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   .status-cell.COMPLETED[_ngcontent-%COMP%]{color:#02c076}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   .status-cell.PENDING[_ngcontent-%COMP%]{color:#f0b90b}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   .status-cell.REJECTED[_ngcontent-%COMP%]{color:#f6465d}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   .status-cell.APPROVED[_ngcontent-%COMP%]{color:#02c076}.transaction-section[_ngcontent-%COMP%]{margin-top:2rem}.transaction-section[_ngcontent-%COMP%]   .section-title[_ngcontent-%COMP%]{color:#fff;font-size:24px;font-weight:500;margin-bottom:1.5rem}.transaction-title[_ngcontent-%COMP%]{color:#fff;font-size:1.75rem;font-weight:500;margin-bottom:1.5rem}.status-completed[_ngcontent-%COMP%]{color:#02c076}.container[_ngcontent-%COMP%]{padding:0!important}.status-pending[_ngcontent-%COMP%]{color:#f0b90b}.status-rejected[_ngcontent-%COMP%]{color:#f6465d}.status-approved[_ngcontent-%COMP%]{color:#02c076}.text-warning[_ngcontent-%COMP%]{color:#f0b90b!important}.text-success[_ngcontent-%COMP%]{color:#02c076!important}.text-danger[_ngcontent-%COMP%]{color:#f6465d!important}.user-info-section[_ngcontent-%COMP%]{width:100%}.id-info-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:1rem;margin-bottom:1rem}.id-item[_ngcontent-%COMP%]{display:flex;align-items:center;background:rgba(240,185,11,.1);padding:.5rem 1rem;border-radius:8px}.id-item[_ngcontent-%COMP%]   .id-label[_ngcontent-%COMP%]{color:#999;margin-right:.5rem;white-space:nowrap}.id-item[_ngcontent-%COMP%]   .fa-copy[_ngcontent-%COMP%]{margin-left:.5rem;cursor:pointer;transition:opacity .2s}.id-item[_ngcontent-%COMP%]   .fa-copy[_ngcontent-%COMP%]:hover{opacity:.8}@media (max-width: 768px){.id-info-wrapper[_ngcontent-%COMP%]{gap:.75rem}.id-item[_ngcontent-%COMP%]{padding:.4rem .75rem;font-size:.9rem}}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}